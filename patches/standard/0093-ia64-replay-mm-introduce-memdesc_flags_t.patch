From 30576bbbfa93c0fd6f53b40117205ed20f7c0899 Mon Sep 17 00:00:00 2001
From: Johnny Mnemonic <jm@machine-hall.org>
Date: Fri, 3 Oct 2025 15:34:24 +0200
Subject: [PATCH 93/93] ia64: replay "mm: introduce memdesc_flags_t"

...otherwise we get these:
```
  CC      arch/ia64/kernel/sys_ia64.o
In file included from ./include/linux/kernel.h:23,
                 from arch/ia64/mm/init.c:8:
arch/ia64/mm/init.c: In function '__ia64_sync_icache_dcache':
arch/ia64/mm/init.c:58:33: error: passing argument 2 of 'const_test_bit' from incompatible pointer type [-Wincompatible-pointer-types]
   58 |         if (test_bit(PG_arch_1, &folio->flags))
      |                                 ^~~~~~~~~~~~~
      |                                 |
      |                                 memdesc_flags_t *
./include/linux/bitops.h:47:24: note: in definition of macro 'bitop'
   47 |          const##op(nr, addr) : op(nr, addr))
      |                        ^~~~
arch/ia64/mm/init.c:58:13: note: in expansion of macro 'test_bit'
   58 |         if (test_bit(PG_arch_1, &folio->flags))
      |             ^~~~~~~~
In file included from ./include/linux/bitops.h:28:
./include/asm-generic/bitops/generic-non-atomic.h:166:64: note: expected 'const volatile long unsigned int *' but argument is of type 'memdesc_flags_t *'
  166 | const_test_bit(unsigned long nr, const volatile unsigned long *addr)
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
arch/ia64/mm/init.c:58:33: error: passing argument 2 of 'generic_test_bit' from incompatible pointer type [-Wincompatible-pointer-types]
   58 |         if (test_bit(PG_arch_1, &folio->flags))
      |                                 ^~~~~~~~~~~~~
      |                                 |
      |                                 memdesc_flags_t *
./include/linux/bitops.h:47:39: note: in definition of macro 'bitop'
   47 |          const##op(nr, addr) : op(nr, addr))
      |                                       ^~~~
arch/ia64/mm/init.c:58:13: note: in expansion of macro 'test_bit'
   58 |         if (test_bit(PG_arch_1, &folio->flags))
      |             ^~~~~~~~
./include/asm-generic/bitops/generic-non-atomic.h:121:66: note: expected 'const volatile long unsigned int *' but argument is of type 'memdesc_flags_t *'
  121 | generic_test_bit(unsigned long nr, const volatile unsigned long *addr)
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
make[6]: *** [scripts/Makefile.build:287: arch/ia64/mm/init.o] Error 1
make[5]: *** [scripts/Makefile.build:556: arch/ia64/mm] Error 2
make[5]: *** Waiting for unfinished jobs....
```

See 53fbef56e07df822ea3029109ffca25328c2e5ac.
---
 arch/ia64/hp/common/sba_iommu.c    | 2 +-
 arch/ia64/include/asm/cacheflush.h | 2 +-
 arch/ia64/mm/init.c                | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c
index e50288465d60..831ff608155a 100644
--- a/arch/ia64/hp/common/sba_iommu.c
+++ b/arch/ia64/hp/common/sba_iommu.c
@@ -818,7 +818,7 @@ static void mark_clean(void *addr, size_t size)
 
 	while (left >= folio_size(folio)) {
 		left -= folio_size(folio);
-		set_bit(PG_arch_1, &folio->flags);
+		set_bit(PG_arch_1, &folio->flags.f);
 		if (!left)
 			break;
 		folio = folio_next(folio);
diff --git a/arch/ia64/include/asm/cacheflush.h b/arch/ia64/include/asm/cacheflush.h
index eac493fa9e0d..992d988589df 100644
--- a/arch/ia64/include/asm/cacheflush.h
+++ b/arch/ia64/include/asm/cacheflush.h
@@ -15,7 +15,7 @@
 #define ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE 1
 static inline void flush_dcache_folio(struct folio *folio)
 {
-	clear_bit(PG_arch_1, &folio->flags);
+	clear_bit(PG_arch_1, &folio->flags.f);
 }
 #define flush_dcache_folio flush_dcache_folio
 
diff --git a/arch/ia64/mm/init.c b/arch/ia64/mm/init.c
index ca6cd0ae0d5d..09f16a2a6f7d 100644
--- a/arch/ia64/mm/init.c
+++ b/arch/ia64/mm/init.c
@@ -55,11 +55,11 @@ __ia64_sync_icache_dcache (pte_t pte)
 	folio = page_folio(pte_page(pte));
 	addr = (unsigned long)folio_address(folio);
 
-	if (test_bit(PG_arch_1, &folio->flags))
+	if (test_bit(PG_arch_1, &folio->flags.f))
 		return;				/* i-cache is already coherent with d-cache */
 
 	flush_icache_range(addr, addr + folio_size(folio));
-	set_bit(PG_arch_1, &folio->flags);	/* mark page as clean */
+	set_bit(PG_arch_1, &folio->flags.f);	/* mark page as clean */
 }
 
 /*
-- 
2.25.1

